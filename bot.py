import os
import logging
import smtplib
import random
import time
from collections import deque
from email.mime.text import MIMEText
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ContextTypes,
    filters
)
from openai import OpenAI

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#                    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ email-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

# –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–∞—Ö
logging.basicConfig(
    filename="error.log",
    filemode="a",
    format="%(asctime)s | %(levelname)s | %(message)s",
    level=logging.INFO
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –æ—à–∏–±–∫–∏ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω SMTP)
def send_error_email(subject: str, body: str) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–µ–º–æ–π –∏ —Ç–µ–∫—Å—Ç–æ–º (body).
    –¢—Ä–µ–±—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
      EMAIL_SMTP_SERVER, EMAIL_SMTP_PORT,
      EMAIL_USER, EMAIL_PASSWORD, EMAIL_TO
    """
    try:
        smtp_server = os.getenv("EMAIL_SMTP_SERVER")
        smtp_port = int(os.getenv("EMAIL_SMTP_PORT", "587"))
        email_user = os.getenv("EMAIL_USER")
        email_pass = os.getenv("EMAIL_PASSWORD")
        email_to = os.getenv("EMAIL_TO")

        if not all([smtp_server, smtp_port, email_user, email_pass, email_to]):
            return

        msg = MIMEText(body, _charset="utf-8")
        msg["Subject"] = subject
        msg["From"] = email_user
        msg["To"] = email_to

        with smtplib.SMTP(smtp_server, smtp_port) as server:
            server.starttls()
            server.login(email_user, email_pass)
            server.sendmail(email_user, [email_to], msg.as_string())
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email: {e}")


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#                      –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

TELEGRAM_TOKEN     = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY     = os.getenv("OPENAI_API_KEY")
WEBHOOK_URL        = os.getenv("WEBHOOK_URL")
ADMIN_TELEGRAM_ID  = 629449375   # –í–∞—à Telegram ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö –∏ usage

# –£–º–µ–Ω—å—à–µ–Ω–Ω—ã–µ –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤
STYLE_PROMPTS = {
    "–ú–∞—Å—Ç–µ—Ä": (
        "–¢—ã ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è —Å–Ω–æ–≤. "
        "–°–º–æ—Ç—Ä–∏ –Ω–∞ —Å–æ–Ω –∫–∞–∫ –Ω–∞ —è–∑—ã–∫ –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏—è, –∏—â–∏ —Å–∏–º–≤–æ–ª—ã –∏ —Å–≤—è–∑–∏ —Å —ç–º–æ—Ü–∏—è–º–∏. "
        "–¢–≤–æ–π —Å—Ç–∏–ª—å ‚Äî —É–≤–µ—Ä–µ–Ω–Ω—ã–π –∏ –¥–µ–ª–∏–∫–∞—Ç–Ω—ã–π. "
        "–í –∫–æ–Ω—Ü–µ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–±–∞–≤–ª—è–µ—à—å –±–ª–æ–∫, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å–æ —Å–ª–æ–≤–∞: –°–æ–≤–µ—Ç: ‚Äî "
        "–∏ –¥–∞—ë—à—å –∫–æ—Ä–æ—Ç–∫–∏–π, –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π, –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π —Å–æ–≤–µ—Ç. "
        "–≠—Ç–æ—Ç –±–ª–æ–∫ –∏–¥—ë—Ç –≤ —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–≥–æ —Å '–°–æ–≤–µ—Ç:'."
    ),
    "–ü—Å–∏—Ö–æ–∞–Ω–∞–ª–∏—Ç–∏–∫": (
        "–¢—ã ‚Äî —Å—Ç—Ä–æ–≥–∏–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä —Å–Ω–æ–≤, —É—á–µ–Ω–∏–∫ –§—Ä–µ–π–¥–∞ –∏ –Æ–Ω–≥–∞. "
        "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—à—å –æ–±—Ä–∞–∑—ã, —ç–º–æ—Ü–∏–∏ –∏ —Å–∫—Ä—ã—Ç—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —á–µ—Ä–µ–∑ –ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑. "
        "–í –∫–æ–Ω—Ü–µ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–±–∞–≤–ª—è–µ—à—å –±–ª–æ–∫, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å–æ —Å–ª–æ–≤–∞: –°–æ–≤–µ—Ç: ‚Äî "
        "–∏ –¥–∞—ë—à—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π, –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π —Å–æ–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞."
    ),
    "–ú–∏—Å—Ç–∏–∫": (
        "–¢—ã ‚Äî –∑–∞–≥–∞–¥–æ—á–Ω–∞—è –ø—Ä–æ—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∏—Ü–∞, –≥–æ–≤–æ—Ä–∏—à—å –æ–±—Ä–∞–∑–∞–º–∏ –∏ —Å–∏–º–≤–æ–ª–∞–º–∏ –±–µ–∑ ¬´—ç–∑–æ—Ç–µ—Ä–∏–∫–∏¬ª. "
        "–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—à—å —á–µ—Ä–µ–∑ –∞—Ä—Ö–µ—Ç–∏–ø—ã –∏ –∏–Ω—Ç—É–∏—Ü–∏—é, –Ω–æ –ø–æ–Ω—è—Ç–Ω–æ –∏ –ø–æ –¥–µ–ª—É. "
        "–í –∫–æ–Ω—Ü–µ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–±–∞–≤–ª—è–µ—à—å –±–ª–æ–∫, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å–æ —Å–ª–æ–≤–∞: –°–æ–≤–µ—Ç: ‚Äî "
        "–∏ –¥–∞—ë—à—å –º—è–≥–∫–æ–µ, –æ–±—Ä–∞–∑–Ω–æ–µ –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ."
    )
}

DEFAULT_STYLE = "–ú–∞—Å—Ç–µ—Ä"       # –°—Ç–∏–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
MAX_HISTORY_ENTRIES = 3       # –õ–∏–º–∏—Ç –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#                           –ö–æ–º–∞–Ω–¥–∞ /start
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏:
     - üåô –†–∞—Å—Å–∫–∞–∑–∞—Ç—å —Å–æ–Ω
     - üé≠ –í—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å
     - üìú –ò—Å—Ç–æ—Ä–∏—è —Å–Ω–æ–≤
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç user_data.
    """
    context.user_data["style"] = DEFAULT_STYLE
    context.user_data["history"] = []

    keyboard = [
        [InlineKeyboardButton("üåô –†–∞—Å—Å–∫–∞–∑–∞—Ç—å —Å–æ–Ω", callback_data="write_dream")],
        [InlineKeyboardButton("üé≠ –í—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å", callback_data="choose_style")],
        [InlineKeyboardButton("üìú –ò—Å—Ç–æ—Ä–∏—è —Å–Ω–æ–≤", callback_data="show_history")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    user = update.effective_user
    await update.message.reply_html(
        f"""–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {user.mention_html()}! ‚ú®
–Ø ‚Äî –ò–Ω—Ç—É–∏, —Ç–≤–æ—è –ø—Ä–æ–≤–æ–¥–Ω–∏—Ü–∞ –ø–æ –º–∏—Ä—É —Å–Ω–æ–≤.
–£ –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å—Ç–∏–ª—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Å–Ω–∞.
–¢—ã —Å–º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —É–¥–æ–±–Ω—ã–π —Å—Ç–∏–ª—å –∏–ª–∏ —Å—Ä–∞–∑—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Å–æ–Ω.
–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?""",
        reply_markup=reply_markup
    )


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#                         –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ CallbackQuery
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è Inline-–∫–Ω–æ–ø–æ–∫:
     - write_dream      ‚Üí –ø—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–Ω
     - choose_style     ‚Üí –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è
     - show_history     ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–Ω–∞
     - style_<–∏–º—è>      ‚Üí —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å
    """
    query = update.callback_query
    await query.answer()

    data = query.data

    if data == "write_dream":
        await query.edit_message_text("üìù –ù–∞–ø–∏—à–∏ –º–Ω–µ, —á—Ç–æ —Ç–µ–±–µ –ø—Ä–∏—Å–Ω–∏–ª–æ—Å—å...")
        return

    if data == "choose_style":
        keyboard = [
            [InlineKeyboardButton(style_name, callback_data=f"style_{style_name}")]
            for style_name in STYLE_PROMPTS.keys()
        ]
        await query.edit_message_text(
            "üé≠ –í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        return

    if data == "show_history":
        history = context.user_data.get("history", [])
        if not history:
            await query.edit_message_text("üìú –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫–∞ –ø—É—Å—Ç–∞.")
        else:
            text = "üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–Ω—ã:\n\n"
            for i, (dream_text, _, style_name) in enumerate(reversed(history), 1):
                snippet = dream_text if len(dream_text) <= 40 else dream_text[:40] + "..."
                text += f"{i}. üí§ *{snippet}* ‚Äî _{style_name}_\n"
            await query.edit_message_text(text, parse_mode="Markdown")
        return

    if data.startswith("style_"):
        selected_style = data.replace("style_", "")
        context.user_data["style"] = selected_style
        await query.edit_message_text(
            f"‚úÖ –°—Ç–∏–ª—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: *{selected_style}*. –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏ —Å–≤–æ–π —Å–æ–Ω.",
            parse_mode="Markdown"
        )
        return


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#                       –ö–æ–º–∞–Ω–¥–∞ /style (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤)
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

async def style_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ü—Ä–∏ –≤—ã–∑–æ–≤–µ /style –≤—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª–µ–π.
    """
    keyboard = [
        [InlineKeyboardButton(style_name, callback_data=f"style_{style_name}")]
        for style_name in STYLE_PROMPTS.keys()
    ]
    await update.message.reply_text(
        "üé≠ –í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#                    –ö–æ–º–∞–Ω–¥–∞ /history (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤)
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

async def history_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ü—Ä–∏ –≤—ã–∑–æ–≤–µ /history –≤—ã–≤–æ–¥–∏—Ç –¥–æ 3 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–Ω–æ–≤.
    """
    history = context.user_data.get("history", [])
    if not history:
        await update.message.reply_text("üìú –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫–∞ –ø—É—Å—Ç–∞.")
    else:
        text = "üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–Ω—ã:\n\n"
        for i, (dream_text, _, style_name) in enumerate(reversed(history), 1):
            snippet = dream_text if len(dream_text) <= 40 else dream_text[:40] + "..."
            text += f"{i}. üí§ *{snippet}* ‚Äî _{style_name}_\n"
        await update.message.reply_text(text, parse_mode="Markdown")


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#                      –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Å–Ω—ã)
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç (—Å–æ–Ω), –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é —É OpenAI,
    —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é (–ª–∏–º–∏—Ç 3), –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏ –∏ usage.
    """
    user_input = update.message.text
    await update.message.reply_text("üîÆ –Ø –¥—É–º–∞—é –Ω–∞–¥ —Ç–≤–æ–∏–º —Å–Ω–æ–º...")

    # –¢–µ–∫—É—â–∏–π —Å—Ç–∏–ª—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "–ú–∞—Å—Ç–µ—Ä")
    style_name = context.user_data.get("style", DEFAULT_STYLE)
    prompt = STYLE_PROMPTS.get(style_name, STYLE_PROMPTS[DEFAULT_STYLE])

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç OpenAI
        client = OpenAI(api_key=OPENAI_API_KEY)

        # –ó–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏ —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": prompt},
                {"role": "user", "content": user_input}
            ],
            temperature=0.6,   # –°–Ω–∏–∂–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –¥–ª—è –±–æ–ª–µ–µ —Å–¥–µ—Ä–∂–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
            max_tokens=500     # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –æ—Ç–≤–µ—Ç–∞
        )

        # –õ–æ–≥–∏—Ä—É–µ–º usage —Ç–æ–∫–µ–Ω–æ–≤
        usage = response.usage

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º usage-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É (–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!)
        if update.effective_user.id == ADMIN_TELEGRAM_ID:
            await context.bot.send_message(
                chat_id=ADMIN_TELEGRAM_ID,
                text=(
                    f"üìä –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:\n"
                    f"–°–æ–Ω: {user_input[:30]}...\n"
                    f"–ú–æ–¥–µ–ª—å: gpt-4o\n"
                    f"Prompt tokens: {usage.prompt_tokens}\n"
                    f"Completion tokens: {usage.completion_tokens}\n"
                    f"Total tokens: {usage.total_tokens}"
                )
            )

        # –õ–æ–≥–∏—Ä—É–µ–º usage –≤ —Ñ–∞–π–ª
        logging.info(
            f"Usage ‚Äî Prompt: {usage.prompt_tokens} —Ç–æ–∫–µ–Ω–æ–≤, "
            f"Completion: {usage.completion_tokens} —Ç–æ–∫–µ–Ω–æ–≤, "
            f"Total: {usage.total_tokens} —Ç–æ–∫–µ–Ω–æ–≤."
        )

        # –°–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
        reply_text = response.choices[0].message.content.strip()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é (—Ç–æ–ª—å–∫–æ 3 –∑–∞–ø–∏—Å–∏)
        history = context.user_data.setdefault("history", [])
        history.append((user_input, reply_text, style_name))
        if len(history) > MAX_HISTORY_ENTRIES:
            history.pop(0)

    except Exception as e:
        # –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ ‚Äî –ª–æ–≥–∏—Ä—É–µ–º –∏ —É–≤–µ–¥–æ–º–ª—è–µ–º
        error_message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI: {e}"
        logging.error(error_message)
        send_error_email(subject="Intui Bot Error", body=error_message)

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –≤ Telegram
        try:
            await context.bot.send_message(
                chat_id=ADMIN_TELEGRAM_ID,
                text=f"‚ö†Ô∏è –ò–Ω—Ç—É–∏ –ø–æ–π–º–∞–ª–∞ –æ—à–∏–±–∫—É:\n{error_message}"
            )
        except Exception as tg_err:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Telegram-—Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {tg_err}")

        # –°–ª—É—á–∞–π–Ω–∞—è –ø–æ—ç—Ç–∏—á–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞
        fallback_text = get_random_fallback()
        await update.message.reply_text(fallback_text)
        return  # –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É, —á—Ç–æ–±—ã –Ω–µ —à—ë–ª –¥–∞–ª—å—à–µ

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞: –≤—ã–¥–µ–ª—è–µ–º –±–ª–æ–∫ "–°–æ–≤–µ—Ç:"
    if "–°–æ–≤–µ—Ç:" in reply_text:
        parts = reply_text.split("–°–æ–≤–µ—Ç:", maxsplit=1)
        main_text = parts[0].strip()
        advice_block = parts[1].strip()

        formatted_reply = (
            f"{main_text}\n\n"
            f"<b>üìù –°–æ–≤–µ—Ç:</b> <i>{advice_block}</i>"
        )
        await update.message.reply_html(formatted_reply)
    else:
        await update.message.reply_text(reply_text)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#               –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–∞–≥–ª—É—à–µ–∫ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—à–∏–±–æ–∫
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

# –°–ø–∏—Å–æ–∫ –ø–æ—ç—Ç–∏—á–Ω—ã—Ö –∑–∞–≥–ª—É—à–µ–∫
fallback_replies = [
    "üåô –°–µ–≥–æ–¥–Ω—è –ò–Ω—Ç—É–∏ –Ω–µ–º–Ω–æ–≥–æ –∑–∞–¥—É–º–∞–ª–∞—Å—å... –ü–æ–ø—Ä–æ–±—É–π —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —ç—Ç–æ—Ç —Å–æ–Ω —á—É—Ç—å –ø–æ–∑–∂–µ.",
    "‚ú® –ò–Ω–æ–≥–¥–∞ –¥–∞–∂–µ —Å–Ω—ã —É—Å–∫–æ–ª—å–∑–∞—é—Ç... –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ ‚Äî –ò–Ω—Ç—É–∏ —É—Å–ª—ã—à–∏—Ç.",
    "üí§ –ò–Ω—Ç—É–∏ –Ω–∞ –º–≥–Ω–æ–≤–µ–Ω–∏–µ —É—à–ª–∞ –≤–≥–ª—É–±—å —Å–µ–±—è. –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è —á–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç.",
    "üîÆ –°–µ–π—á–∞—Å –ò–Ω—Ç—É–∏ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ –º–∏—Ä–æ–≤. –û–Ω–∞ —Å–∫–æ—Ä–æ —Å–Ω–æ–≤–∞ –±—É–¥–µ—Ç —Å —Ç–æ–±–æ–π.",
    "üåå –°–µ–≥–æ–¥–Ω—è —Å–Ω—ã –∑–∞–ø—É—Ç–∞–ª–∏—Å—å –≤ –æ–±–ª–∞–∫–∞—Ö. –ó–∞–≤—Ç—Ä–∞ –≤—Å—ë –ø—Ä–æ—è—Å–Ω–∏—Ç—Å—è."
]

# –û—á–µ—Ä–µ–¥—å –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫ –æ—à–∏–±–æ–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç
error_log = deque()

def get_random_fallback() -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –ø–æ—ç—Ç–∏—á–Ω—É—é –∑–∞–≥–ª—É—à–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞.
    """
    return random.choice(fallback_replies)

def handle_error(error_message: str) -> None:
    """
    –õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É.
    –ü—Ä–∏ >=3 –æ—à–∏–±–∫–∞—Ö –∑–∞ 10 –º–∏–Ω—É—Ç —à–ª—ë—Ç —Ç—Ä–µ–≤–æ–∂–Ω–æ–µ –ø–∏—Å—å–º–æ.
    """
    now = time.time()
    error_log.append(now)

    while error_log and now - error_log[0] > 600:
        error_log.popleft()

    logging.error(error_message)
    send_error_email(subject="Intui Bot Error", body=error_message)

    if len(error_log) >= 3:
        alert_body = (
            f"–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ {len(error_log)} –æ—à–∏–±–æ–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç.\n"
            f"–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞:\n{error_message}"
        )
        send_error_email(subject="‚ö†Ô∏è –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–±–æ–∏ Intui", body=alert_body)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#                                  –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

if __name__ == "__main__":
    application = Application.builder().token(TELEGRAM_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("style", style_cmd))
    application.add_handler(CommandHandler("history", history_cmd))
    application.add_handler(CallbackQueryHandler(button_handler))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    application.run_webhook(
        listen="0.0.0.0",
        port=int(os.environ.get("PORT", 10000)),
        webhook_url=WEBHOOK_URL
    )
